# Generated by Django 5.1.1 on 2024-12-12 06:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('student', '0010_student_batch'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyRegistration',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('min_tenth_marks', models.FloatField()),
                ('min_higher_secondary_marks', models.FloatField()),
                ('min_cgpa', models.FloatField()),
                ('min_attendance', models.FloatField()),
                ('is_kt', models.BooleanField(default=False)),
                ('is_backLog', models.BooleanField(default=False)),
                ('domain', models.CharField(choices=[('core', 'core'), ('it', 'it')], max_length=40)),
                ('Departments', models.TextField(default='all')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='jobAcceptance',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('offer_letter', models.URLField()),
                ('isVerified', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='placement_api.companyregistration')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='company_job_offer_acceptance', to='student.student')),
            ],
        ),
        migrations.CreateModel(
            name='jobApplication',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('attendance', models.BooleanField(default=False)),
                ('aptitude', models.BooleanField(null=True)),
                ('gd', models.BooleanField(null=True)),
                ('case_study', models.BooleanField(null=True)),
                ('hr_round', models.BooleanField(null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='company_job_applications', to='student.student')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student.student')),
            ],
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=100)),
                ('salary', models.FloatField()),
                ('position', models.CharField(max_length=100)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_offers', to='placement_api.companyregistration')),
            ],
        ),
        migrations.CreateModel(
            name='placementNotice',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('sr_no', models.TextField()),
                ('to', models.TextField()),
                ('subject', models.TextField()),
                ('date', models.DateTimeField(auto_now=True)),
                ('eligibility_criteria', models.TextField()),
                ('roles', models.TextField()),
                ('about', models.TextField(null=True)),
                ('skill_required', models.TextField()),
                ('company_registration_link', models.URLField()),
                ('note', models.TextField()),
                ('from_user', models.TextField()),
                ('from_designation', models.TextField()),
                ('extra', models.TextField()),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='placement_notice', to='placement_api.companyregistration')),
            ],
        ),
    ]
